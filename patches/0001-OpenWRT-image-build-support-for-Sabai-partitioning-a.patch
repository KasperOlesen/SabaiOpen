From 3bf174288477e5c3e92c38d2e5cc990471291b15 Mon Sep 17 00:00:00 2001
From: K <k@k-HP-ProBook-4520s.(none)>
Date: Mon, 10 Nov 2014 13:26:07 +0200
Subject: [PATCH] OpenWRT image build support for Sabai partitioning and
 fallback

---
 target/linux/x86_64/image/Makefile           |   26 +++++++----
 target/linux/x86_64/image/gen_image_sabai.sh |   62 ++++++++++++++++++++++++++
 2 files changed, 80 insertions(+), 8 deletions(-)
 create mode 100755 target/linux/x86_64/image/gen_image_sabai.sh

diff --git a/target/linux/x86_64/image/Makefile b/target/linux/x86_64/image/Makefile
index e8d9ac1..24abe39 100644
--- a/target/linux/x86_64/image/Makefile
+++ b/target/linux/x86_64/image/Makefile
@@ -9,7 +9,7 @@ include $(INCLUDE_DIR)/image.mk
 
 export PATH=$(TARGET_PATH):/sbin
 
-GRUB2_MODULES = biosdisk boot chain configfile ext2 linux ls part_msdos reboot serial vga
+GRUB2_MODULES = biosdisk boot chain configfile ext2 linux ls part_msdos reboot serial echo test loadenv vga
 GRUB2_MODULES_ISO = biosdisk boot chain configfile iso9660 linux ls part_msdos reboot serial vga
 GRUB_TERMINALS =
 GRUB_SERIAL_CONFIG =
@@ -77,23 +77,22 @@ ifneq ($(CONFIG_GRUB_IMAGES),)
 		-c ./grub-early.cfg \
 		$(GRUB2_MODULES)
 	$(CP) $(STAGING_DIR_HOST)/lib/grub/i386-pc/*.img $(KDIR)/grub2/
-	echo '(hd0) $(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img' > $(KDIR)/grub2/device.map
+	echo '(hd0) $(BIN_DIR)/$(IMG_PREFIX)-sabai-$(1).img' > $(KDIR)/grub2/device.map
 	sed \
 		-e 's#@SERIAL_CONFIG@#$(strip $(GRUB_SERIAL_CONFIG))#g' \
 		-e 's#@TERMINAL_CONFIG@#$(strip $(GRUB_TERMINAL_CONFIG))#g' \
 		-e 's#@CMDLINE@#$(strip $(call Image/cmdline/$(1)) $(BOOTOPTS) $(GRUB_CONSOLE_CMDLINE))#g' \
 		-e 's#@TIMEOUT@#$(GRUB_TIMEOUT)#g' \
 		./grub.cfg > $(KDIR)/root.grub/boot/grub/grub.cfg
-	PADDING="$(CONFIG_TARGET_IMAGES_PAD)" SIGNATURE="$(SIGNATURE)" PATH="$(TARGET_PATH)" ./gen_image_generic.sh \
-		$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img \
+	PADDING="$(CONFIG_TARGET_IMAGES_PAD)" SIGNATURE="$(SIGNATURE)" PATH="$(TARGET_PATH)" ./gen_image_sabai.sh \
+		$(BIN_DIR)/$(IMG_PREFIX)-sabai-$(1).img \
 		$(CONFIG_TARGET_KERNEL_PARTSIZE) $(KDIR)/root.grub \
-		$(CONFIG_TARGET_ROOTFS_PARTSIZE) $(KDIR)/root.$(1) \
-		256
+		$(CONFIG_TARGET_ROOTFS_PARTSIZE) $(KDIR)/root.$(1) 256
 	grub-bios-setup \
 		--device-map="$(KDIR)/grub2/device.map" \
 		-d "$(KDIR)/grub2" \
 		-r "hd0,msdos1" \
-		"$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img"
+		"$(BIN_DIR)/$(IMG_PREFIX)-sabai-$(1).img"
 	$(call Image/Build/grub/$(1))
   endef
 endif
@@ -159,7 +158,7 @@ ifneq ($(CONFIG_VMDK_IMAGES),)
 endif
 
 define Image/Build/gzip
-	gzip -f9 $(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img
+	gzip -f9 $(BIN_DIR)/$(IMG_PREFIX)-sabai-$(1).img
 	gzip -f9 $(BIN_DIR)/$(IMG_PREFIX)-rootfs-$(1).img
 endef
 
@@ -194,6 +193,16 @@ define Image/Build/Initramfs
 	$(CP) $(KDIR)/bzImage-initramfs $(BIN_DIR)/$(IMG_PREFIX)-ramfs.bzImage
 endef
 
+define Image/Build/UpgradeImg
+	gzip -c $(BIN_DIR)/$(IMG_PREFIX)-rootfs-ext4.img > $(BIN_DIR)/rootfs-sabai-img.gz
+	tar -C $(BIN_DIR) -cf $(BIN_DIR)/sabai-bundle.tar rootfs-sabai-img.gz $(IMG_PREFIX)-vmlinuz
+	openssl dgst -sha256 <  $(BIN_DIR)/sabai-bundle.tar > $(BIN_DIR)/hash
+	openssl rsautl -sign -inkey $(TOPDIR)/files/etc/sabai/keys/private.pem -keyform PEM -in $(BIN_DIR)/hash  > $(BIN_DIR)/signature
+	tar -C $(BIN_DIR) -cf $(BIN_DIR)/sabai-bundle-secured.tar sabai-bundle.tar signature
+	rm $(BIN_DIR)/hash
+endef
+
+
 define Image/Build
 	$(call Image/Build/$(1))
 	$(call Image/Build/bootscript,$(1))
@@ -211,6 +220,7 @@ define Image/Build
 ifeq ($(CONFIG_TARGET_ROOTFS_INITRAMFS),y)
 	$(call Image/Build/Initramfs)
 endif
+	$(call Image/Build/UpgradeImg)
 endef
 
 $(eval $(call BuildImage))
diff --git a/target/linux/x86_64/image/gen_image_sabai.sh b/target/linux/x86_64/image/gen_image_sabai.sh
new file mode 100755
index 0000000..2db5a32
--- /dev/null
+++ b/target/linux/x86_64/image/gen_image_sabai.sh
@@ -0,0 +1,62 @@
+#!/usr/bin/env bash
+# Copyright (C) 2006-2012 OpenWrt.org
+set -x
+[ $# == 5 -o $# == 6 ] || {
+    echo "SYNTAX: $0 <file> <kernel size> <kernel directory> <rootfs size> <rootfs image> [<align>]"
+    exit 1
+}
+
+#####################
+#1 KERNELS
+#####################
+#2 ROOTFS1
+#####################
+#3 ROOTFS2
+#####################
+#4 Extended
+#####################
+
+
+OUTPUT="$1"
+KERNELSIZE="$2"
+KERNELDIR="$3"
+ROOTFSSIZE1="$4"
+ROOTFSIMAGE="$5"
+ALIGN="$6"
+
+echo "KERNELSIZE=$KERNELSIZE"
+KERNELSIZE="$(( $KERNELSIZE * 4))"
+echo "KERNELSIZE=$KERNELSIZE"
+ROOTFSSIZE2="$ROOTFSSIZE1"
+
+rm -f "$OUTPUT"
+
+head=16
+sect=63
+cyl=$(( ($KERNELSIZE + $ROOTFSSIZE1 + $ROOTFSSIZE2) * 1024 * 1024 / ($head * $sect * 512)))
+
+# create partition table
+set `ptgen -v -o "$OUTPUT" -h $head -s $sect -p ${KERNELSIZE}m -p ${ROOTFSSIZE1}m -p ${ROOTFSSIZE2}m ${ALIGN:+-l $ALIGN}`
+
+KERNELOFFSET="$(($1 / 512))"
+KERNELSIZE="$(($2 / 512))"
+ROOTFSOFFSET1="$(($3 / 512))"
+ROOTFSSIZE1="$(($4 / 512))"
+ROOTFSOFFSET2="$(($5 / 512))"
+ROOTFSSIZE2="$(($6 / 512))"
+
+BLOCKS_KERNEL="$((($KERNELSIZE / 2) - 1))"
+BLOCKS_ROOTFS1="$((($ROOTFSSIZE1 / 2) - 1))"
+BLOCKS_ROOTFS2="$((($ROOTFSSIZE2 / 2) - 1))"
+
+#[ -n "$PADDING" ] && dd if=/dev/zero of="$OUTPUT" bs=512 seek="$ROOTFSOFFSET1" conv=notrunc count="$ROOTFSSIZE1"
+dd if="$ROOTFSIMAGE" of="$OUTPUT" bs=512 seek="$ROOTFSOFFSET1" conv=notrunc
+dd if="$ROOTFSIMAGE" of="$OUTPUT" bs=512 seek="$ROOTFSOFFSET2" conv=notrunc
+
+[ -n "$NOGRUB" ] && exit 0
+
+genext2fs -d "$KERNELDIR" -b "$BLOCKS_KERNEL" "$OUTPUT.kernel"
+dd if="$OUTPUT.kernel" of="$OUTPUT" bs=512 seek="$KERNELOFFSET" conv=notrunc
+rm -f "$OUTPUT.kernel"
+
+
-- 
1.7.9.5

