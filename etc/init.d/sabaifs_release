#!/bin/sh /etc/rc.common

START=13

USE_PROCD=1

_copy_config() {
	if [ ! -e "/configs/custom_$1" ]; then
		rm /etc/config/sabai
	else
		rm -r /etc/config
		rm -r /etc/sabai/openvpn
        	cp -fR /configs/custom_$1/config /etc
        	cp -fR /configs/custom_$1/openvpn /etc/sabai
		mv /etc/config/sabai /configs
	fi
        [ -h "/etc/config/sabai" ] || ln -s /configs/sabai /etc/config/sabai
        [ -h /www/configs ] || ln -s /configs /www/configs
	uci -c /configs set sabai.general.version="$2"
	uci -c /configs commit sabai
}

_reset() {
	first_boot="$(head -n 1 /etc/sabai/sys_reset)"
	last_boot="$(tail -1 /etc/sabai/sys_reset)"
	diff=$(( $last_boot - $first_boot ))

	if [ $diff -gt 300 ]; then
		# reset curr partition to factory
		# set default pass
		pass="sabaipass123"             
		logger "<<<-------- FACTORY RESET PROCEDURE -------->>>"
		echo "<<<-------- FACTORY RESET PROCEDURE -------->>>" > /dev/kmsg
		echo "root:$pass" | chpasswd 
		echo "admin:$pass" | chpasswd
		/www/bin/reset.sh     
	else                          
		# clear chache        
		> /etc/sabai/sys_reset
	fi
}

create_partitions() {
	CMD=$( ls /dev/sda5 )
        if [ $? = 0 ]; then
                echo "SABAI:> Found sabai partitions. Nothing to do"
                return 0;
        fi

        echo "+++++++++++++++++++++++++++++++++++++++++++++"
        echo "Sabai Networks 1st boot. Creating filesystems"
        echo "+++++++++++++++++++++++++++++++++++++++++++++"

        /etc/init.d/fdisker

	echo "SABAI:> partitions created"

        reboot
        exit 0

}

make_filesystems() {

        logger "SABAI:> making filesystems"
	mount -t ext2 /dev/sda1 /mnt
	CMD_FILE=$(ls /mnt/boot/vmlinuz2)
	umount /dev/sda1
        if [ -z "$CMD_FILE" ]; then
                echo "SABAI:> Found sabai partitions. Creating filesystems"
                mkfs.ext4 -F /dev/sda5
                mkfs.ext4 -F /dev/sda6
                mkfs.ext4 -F /dev/sda7
                echo "SABAI:> Copying kernel partition"
                mount -t ext4 /dev/sda1 /mnt
                cp -f /mnt/boot/vmlinuz /mnt/boot/vmlinuz2
		mv /mnt/boot/vmlinuz /mnt/boot/vmlinuz1

                cp -f /etc/sabai/grub.cfg.sabai /mnt/boot/grub/grub.cfg
                umount /dev/sda1

                mount -t ext4 /dev/sda5 /mnt
                grub-editenv /mnt/grubenv create
                grub-editenv /mnt/grubenv set boot_entry=0
		grub-editenv /mnt/grubenv set is_upgrade=0
		BOOT_ENTRY=$(grub-editenv /mnt/grubenv list | grep boot_entry | awk -F "=" '{print $2}')
                umount /dev/sda5

		echo "SABAI:> Creating directory configuration' storage."
		uci set sabai.general.revert='0'
	        uci commit sabai
		mkdir /configs
		mount -t ext4 /dev/sda6 /configs

		# save factory settings
		mkdir /configs/system_$BOOT_ENTRY
                cp -r /etc/config /configs/system_$BOOT_ENTRY
                cp -r /etc/sabai/openvpn /configs/system_$BOOT_ENTRY

		mv /etc/config/sabai /configs
		ln -s /configs/sabai /etc/config/sabai
		ln -s /configs/ /www/configs
		version="$(uci get sabai.general.version)"
		echo $version > /etc/version
		touch /etc/sabai/sys_reset
		echo "SABAI:> Configuration Sabai is allocated."
        else
		logger "SABAI:> Filesystems already created"
		mount -t ext4 /dev/sda5 /mnt
		UPGRADE_IN_PROGRESS=$(grub-editenv /mnt/grubenv list | grep is_upgrade | awk -F "=" '{print $2}')
		PREV_KERNEL=$(grub-editenv /mnt/grubenv list | grep prev_kernel | awk -F "=" '{print $2}')
		SAVE_DEFAULT=$(grub-editenv /mnt/grubenv list | grep save_default | awk -F "=" '{print $2}')
		BOOT_ENTRY=$(grub-editenv /mnt/grubenv list | grep boot_entry | awk -F "=" '{print $2}')
		REVERT_IN_PROGRESS=$(grub-editenv /mnt/grubenv list | grep is_revert | awk -F "=" '{print $2}')

		if [ "$UPGRADE_IN_PROGRESS" = "1" ] || [ "$REVERT_IN_PROGRESS" = "1" ]; then
			if [ "$SAVE_DEFAULT" = "1" ]; then
				[ "$UPGRADE_IN_PROGRESS" = "1" ] && echo "SABAI:> Sucessfully booted into after firmware upgrade" > /www/resUpgrade.txt
				[ "$REVERT_IN_PROGRESS" = "1" ] && echo "SABAI:> Sucessfully booted into previous firmware upgrade" > /www/resUpgrade.txt				
				# Sucessfully booted, so, cleanup savedefault entry
               			if [ "$BOOT_ENTRY" = "1" ]; then
                        		grub-editenv /mnt/grubenv set boot_entry=0
                		else
                        		grub-editenv /mnt/grubenv set boot_entry=1
                		fi
				BOOT_ENTRY=$(grub-editenv /mnt/grubenv list | grep boot_entry | awk -F "=" '{print $2}')
				grub-editenv /mnt/grubenv set save_default=0
        		        grub-editenv /mnt/grubenv set is_upgrade=0
				grub-editenv /mnt/grubenv set is_revert=0
				umount /dev/sda5

				mount -t ext2 /dev/sda1 /mnt
				# switching between entries requires calling "savedefault" function
				# on entry, which is going to be used after upgrade
				sed -i "s/function savedefault/tempstring/g" /mnt/boot/grub/grub.cfg
                        	sed -i "s/# savedefault/Savedefault/g" /mnt/boot/grub/grub.cfg
                        	sed -i "s/savedefault/# savedefault/g" /mnt/boot/grub/grub.cfg
                        	sed -i "s/Savedefault/savedefault/g" /mnt/boot/grub/grub.cfg
				sed -i "s/tempstring/function savedefault/g" /mnt/boot/grub/grub.cfg
                        	umount /dev/sda1

				logger "SABAI:> Creating directory configuration' storage."
				[ -d "/configs" ] || mkdir /configs
				mount -t ext4 /dev/sda6 /configs

				if [ "$REVERT_IN_PROGRESS" != "1" ]; then
					version="$(uci get sabai.general.version)"
					# save new system config
					[ -d "/configs/system_$BOOT_ENTRY" ] || mkdir /configs/system_$BOOT_ENTRY
					cp -fR /etc/config /configs/system_$BOOT_ENTRY
					cp -fR /etc/sabai/openvpn /configs/system_$BOOT_ENTRY
					[ "$BOOT_ENTRY" = "0" ] && _copy_config 1 $version || _copy_config 0 $version
				else
					version="$(cat /etc/version)"			
					[ "$BOOT_ENTRY" = "0" ] && _copy_config 0 $version || _copy_config 1 $version
				fi
				logger "SABAI:> Configuration Sabai is allocated."
			else
				logger "SABAI:> Upgrade failed. Fallback to old kernel"
				grub-editenv /mnt/grubenv set is_upgrade=0
				umount /dev/sda5
			fi
		else
			logger "SABAI:> Regular boot"
			umount /dev/sda5
			mount -t ext4 /dev/sda6 /configs
		fi
        fi
}

start_service() {
        exec 1>/dev/console  ;
        exec 2>/dev/console  ;
        create_partitions
        make_filesystems
        mount -t ext4 /dev/sda5 /mnt
	logger "BOOT FINISHED"
	[ $(grep -c "." /etc/sabai/sys_reset) -eq 5 ] && _reset
}

