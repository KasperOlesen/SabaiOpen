#!/usr/bin/ash
# Script defines WAN parameters for VPNA and LAN parameters for Router.
# According to the network changes will be reconfigured WEB server, SSH
# and privoxy.

[ wan = "$INTERFACE" ] && {
	[ "$(uci get sabai.vpn.proto)" = "pptp" ] && exit 0
	logger -t SABAI.WAN "Network data of $DEVICE will be updated."
	[ 1 = "$(uci get -p /var/state/ network.wan.up)" ] && {
		if [ "vpna" = "$(uci get system.@system[0].hostname)" ]; then
			permit_access="$(ip route | grep -e "/24 dev eth0" | awk -F: '{print $0}' | awk '{print $1}')"
			uci set dropbear.@dropbear[0].Interface='wan'
		else
			ip_lan="$(ifconfig -a br-lan | grep -F "inet addr" | awk '{print $2}' | tr -d 'addr:')"
			permit_access="$(ip route | grep -e "/24 dev br-lan" | awk -F: '{print $0}' | awk '{print $1}')"
			uci set dropbear.@dropbear[0].Interface='lan'
		fi
		uci commit dropbear

		ip_wan="$(ifconfig -a eth0 | grep -F "inet addr" | awk '{print $2}' | tr -d 'addr:')"
		gateway_wan="$( route -n | grep eth0 | grep "UG" | awk '{print $2}')"
		mask_wan="$( route -n | grep eth0 | grep "UH" | awk '{print $3}')"
		uci set network.wan.ipaddr=$ip_wan
		uci set network.wan.gateway=$gateway_wan
		uci set network.wan.netmask=$mask_wan
		uci commit network

		[ $(uci get sabai.wan.factory_mac) ] || /www/bin/wan.sh set_mac
		uci set sabai.wan.ipaddr=$ip
		uci set sabai.wan.gateway=$gateway
		uci set sabai.wan.netmask=$mask
		uci commit sabai

		uci set uhttpd.main.listen_http=$ip':80'
		uci set uhttpd.main.listen_https=$ip':443'
		uci commit uhttpd

		uci set privoxy.privoxy.permit_access=$permit_access
		uci set privoxy.privoxy.listen_address=$ip':8080 127.0.0.1:8080'
		uci commit privoxy

		/etc/init.d/uhttpd restart
		/etc/init.d/dropbear restart
		/etc/init.d/privoxy restart
	}
}
