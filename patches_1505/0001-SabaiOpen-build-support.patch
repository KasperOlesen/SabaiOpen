From 654de2a72f57c2fa42d809637f2dbf6f4ed6402e Mon Sep 17 00:00:00 2001
From: Kateryna Pietukhova <kateryna.pietukhova@sirinsoftware.com>
Date: Wed, 21 Oct 2015 05:14:21 -0400
Subject: [PATCH] SabaiOpen build support

---
 target/linux/x86/image/Makefile           | 115 ++++++++++++++++--------------
 target/linux/x86/image/gen_image_sabai.sh |  62 ++++++++++++++++
 2 files changed, 122 insertions(+), 55 deletions(-)
 create mode 100755 target/linux/x86/image/gen_image_sabai.sh

diff --git a/target/linux/x86/image/Makefile b/target/linux/x86/image/Makefile
index e7e02f1..f74ded1 100644
--- a/target/linux/x86/image/Makefile
+++ b/target/linux/x86/image/Makefile
@@ -1,5 +1,5 @@
-# 
-# Copyright (C) 2006-2012 OpenWrt.org
+#
+# Copyright (C) 2006-2013 OpenWrt.org
 #
 # This is free software, licensed under the GNU General Public License v2.
 # See /LICENSE for more information.
@@ -9,7 +9,7 @@ include $(INCLUDE_DIR)/image.mk
 
 export PATH=$(TARGET_PATH):/sbin
 
-GRUB2_MODULES = biosdisk boot chain configfile ext2 linux ls part_msdos reboot serial vga
+GRUB2_MODULES = biosdisk boot chain configfile ext2 linux ls part_msdos reboot serial echo test loadenv vga
 GRUB2_MODULES_ISO = biosdisk boot chain configfile iso9660 linux ls part_msdos reboot serial vga
 GRUB_TERMINALS =
 GRUB_SERIAL_CONFIG =
@@ -18,7 +18,13 @@ GRUB_CONSOLE_CMDLINE =
 
 USE_ATKBD = generic kvm_guest
 
-ifneq ($(strip $(foreach subtarget,$(USE_ATKBD),$(CONFIG_TARGET_x86_$(subtarget)))),)
+ifeq ($(BUILD_TYPE),DEBUG)
+  $(shell cp $(TOPDIR)/files/etc/init.d/sabaifs_debug $(TOPDIR)/files/etc/init.d/sabaifs)
+else
+  $(shell cp $(TOPDIR)/files/etc/init.d/sabaifs_release $(TOPDIR)/files/etc/init.d/sabaifs)
+endif
+
+ifneq ($(strip $(foreach subtarget,$(USE_ATKBD),$(CONFIG_TARGET_x86_64_$(subtarget)))),)
   GRUB2_MODULES += at_keyboard
   GRUB2_MODULES_ISO += at_keyboard
 endif
@@ -32,7 +38,7 @@ GRUB_SERIAL:=$(call qstrip,$(CONFIG_GRUB_SERIAL))
 
 ifneq ($(GRUB_SERIAL),)
   GRUB_CONSOLE_CMDLINE += console=$(GRUB_SERIAL),$(CONFIG_GRUB_BAUDRATE)n8
-  GRUB_SERIAL_CONFIG := serial --unit=0 --speed=$(CONFIG_GRUB_BAUDRATE) --word=8 --parity=no --stop=1 --rtscts=off
+  GRUB_SERIAL_CONFIG := serial --unit=0 --speed=$(CONFIG_GRUB_BAUDRATE) --word=8 --parity=no --stop=1
   GRUB_TERMINALS += serial
 endif
 
@@ -40,7 +46,7 @@ ifneq ($(GRUB_TERMINALS),)
   GRUB_TERMINAL_CONFIG := terminal_input $(GRUB_TERMINALS); terminal_output $(GRUB_TERMINALS)
 endif
 
-SIGNATURE:=$(shell dd if=/dev/urandom bs=4 count=1 2>/dev/null | hexdump -v -e '"%08x"')
+SIGNATURE:=$(shell dd if=/dev/urandom bs=4 count=1 2>/dev/null | hexdump -v -e '"%02x"')
 ROOTPART:=$(call qstrip,$(CONFIG_TARGET_ROOTFS_PARTNAME))
 ROOTPART:=$(if $(ROOTPART),$(ROOTPART),PARTUUID=$(SIGNATURE)-02)
 
@@ -77,23 +83,22 @@ ifneq ($(CONFIG_GRUB_IMAGES),)
 		-c ./grub-early.cfg \
 		$(GRUB2_MODULES)
 	$(CP) $(STAGING_DIR_HOST)/lib/grub/i386-pc/*.img $(KDIR)/grub2/
-	echo '(hd0) $(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img' > $(KDIR)/grub2/device.map
+	echo '(hd0) $(BIN_DIR)/$(IMG_PREFIX)-sabai-$(1).img' > $(KDIR)/grub2/device.map
 	sed \
 		-e 's#@SERIAL_CONFIG@#$(strip $(GRUB_SERIAL_CONFIG))#g' \
 		-e 's#@TERMINAL_CONFIG@#$(strip $(GRUB_TERMINAL_CONFIG))#g' \
 		-e 's#@CMDLINE@#$(strip $(call Image/cmdline/$(1)) $(BOOTOPTS) $(GRUB_CONSOLE_CMDLINE))#g' \
 		-e 's#@TIMEOUT@#$(GRUB_TIMEOUT)#g' \
 		./grub.cfg > $(KDIR)/root.grub/boot/grub/grub.cfg
-	PADDING="$(CONFIG_TARGET_IMAGES_PAD)" SIGNATURE="$(SIGNATURE)" PATH="$(TARGET_PATH)" ./gen_image_generic.sh \
-		$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img \
+	PADDING="$(CONFIG_TARGET_IMAGES_PAD)" SIGNATURE="$(SIGNATURE)" PATH="$(TARGET_PATH)" ./gen_image_sabai.sh \
+		$(BIN_DIR)/$(IMG_PREFIX)-sabai-$(1).img \
 		$(CONFIG_TARGET_KERNEL_PARTSIZE) $(KDIR)/root.grub \
-		$(CONFIG_TARGET_ROOTFS_PARTSIZE) $(KDIR)/root.$(1) \
-		256
+		$(CONFIG_TARGET_ROOTFS_PARTSIZE) $(KDIR)/root.$(1) 256
 	grub-bios-setup \
 		--device-map="$(KDIR)/grub2/device.map" \
 		-d "$(KDIR)/grub2" \
 		-r "hd0,msdos1" \
-		"$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img"
+		"$(BIN_DIR)/$(IMG_PREFIX)-sabai-$(1).img"
 	$(call Image/Build/grub/$(1))
   endef
 endif
@@ -130,27 +135,38 @@ endef
 
 ifneq ($(CONFIG_VDI_IMAGES),)
   define Image/Build/vdi
-	rm $(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).vdi || true
-	qemu-img convert -f raw -O vdi \
-		$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img \
-		$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).vdi
-	# XXX: VBoxManage insists on setting perms to 0600
-	chmod 0644 $(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).vdi
+    # left here because the image builder doesnt need these
+    ifeq ($(1),ext4)
+		rm $(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).vdi || true
+		qemu-img convert -f raw -O vdi \
+			$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img \
+			$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).vdi
+		# XXX: VBoxManage insists on setting perms to 0600
+		chmod 0644 $(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).vdi
+    endif
   endef
 endif
 
 ifneq ($(CONFIG_VMDK_IMAGES),)
   define Image/Build/vmdk
-	rm $(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).vmdk || true
-	qemu-img convert -f raw -O vmdk \
-		$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img \
-		$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).vmdk
+    # left here because the image builder doesnt need these
+    ifeq ($(1),ext4)
+		rm $(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).vmdk || true
+		qemu-img convert -f raw -O vmdk -o adapter_type=lsilogic \
+			$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img \
+			$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).vmdk
+		rm $(BIN_DIR)/$(IMG_PREFIX)-combined-$(1)-esxi.vmdk || true
+		qemu-img convert -f raw -O vmdk -o adapter_type=lsilogic,subformat=monolithicFlat \
+			$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img \
+			$(BIN_DIR)/$(IMG_PREFIX)-combined-$(1)-esxi.vmdk
+    endif
   endef
 endif
 
 define Image/Build/gzip
-	gzip -f9 $(BIN_DIR)/$(IMG_PREFIX)-combined-$(1).img
-	gzip -f9 $(BIN_DIR)/$(IMG_PREFIX)-rootfs-$(1).img
+	gzip -c9 $(BIN_DIR)/$(IMG_PREFIX)-sabai-$(1).img > $(BIN_DIR)/$(IMG_PREFIX)-sabai-$(1).img.gz
+	gzip -c9 $(BIN_DIR)/$(IMG_PREFIX)-rootfs-$(1).img > $(BIN_DIR)/$(IMG_PREFIX)-rootfs-$(1).img.gz
 endef
 
 ifneq ($(CONFIG_TARGET_IMAGES_GZIP),)
@@ -172,40 +188,11 @@ endif
 
 define Image/BuildKernel
 	$(CP) $(KDIR)/bzImage $(BIN_DIR)/$(IMG_PREFIX)-vmlinuz
-  ifneq ($(CONFIG_X86_ETHERBOOT_IMAGES),)
-	rm -f $(BIN_DIR)/$(IMG_PREFIX)-etherboot
-	$(STAGING_DIR_HOST)/bin/mkelfImage \
-		--append=$(CONFIG_X86_ETHERBOOT_BOOTOPTS) \
-		$(KDIR)/bzImage \
-		$(BIN_DIR)/$(IMG_PREFIX)-etherboot
-  endif
-endef
-
-define Image/Build/Profile/ar525w
-	cp $(KDIR)/bzImage $(KDIR)/bzImage.tmp
-	$(SCRIPT_DIR)/pad_image $(1) $(KDIR)/bzImage.tmp $(KDIR)/root.$(1) 32
-	$(STAGING_DIR_HOST)/bin/airlink -b 1 $(KDIR)/bzImage.tmp $(KDIR)/root.$(1) \
-		$(BIN_DIR)/$(IMG_PREFIX)-$(1)-ar525w.img
-	$(STAGING_DIR_HOST)/bin/airlink -e -b 1 $(KDIR)/bzImage.tmp $(KDIR)/root.$(1) \
-		$(BIN_DIR)/$(IMG_PREFIX)-$(1)-ar525w-web.img
-endef
-
-define Image/Build/Profile/sitecom
-	cp $(KDIR)/bzImage $(KDIR)/bzImage.tmp
-	#32k config data + 20 bytes header + 2 bytes checksum after kernel image
-	$(SCRIPT_DIR)/pad_image $(1) $(KDIR)/bzImage.tmp $(KDIR)/root.$(1) 32790
-	$(TOPDIR)/target/linux/rdc/image/mkimg_sitecom.pl $(KDIR)/bzImage.tmp > $(KDIR)/tmp.img
-	cat $(KDIR)/root.$(1) >> $(KDIR)/tmp.img
-	cp $(KDIR)/tmp.img $(BIN_DIR)/$(IMG_PREFIX)-$(1)-sitecom.img
-	rm $(KDIR)/tmp.img $(KDIR)/bzImage.tmp
-endef
-
-define Image/Build/Profile/bifferboard
-	$(TOPDIR)/target/linux/rdc/image/mkimg_bifferboard.py $(KDIR)/bzImage $(KDIR)/root.$(1) \
-		$(BIN_DIR)/$(IMG_PREFIX)-$(1)-bifferboard.img
 endef
 
 define Image/Prepare
+	$(CP) $(LINUX_DIR)/arch/x86/boot/bzImage $(KDIR)/bzImage
+	$(call Image/Prepare/bootscript)
 	$(call Image/Prepare/grub2)
 endef
 
@@ -213,8 +200,19 @@ define Image/Build/Initramfs
 	$(CP) $(KDIR)/bzImage-initramfs $(BIN_DIR)/$(IMG_PREFIX)-ramfs.bzImage
 endef
 
+define Image/Build/UpgradeImg
+	gzip -c $(BIN_DIR)/$(IMG_PREFIX)-rootfs-ext4.img > $(BIN_DIR)/rootfs-sabai-img.gz
+	tar -C $(BIN_DIR) -cf $(BIN_DIR)/sabai-bundle.tar rootfs-sabai-img.gz $(IMG_PREFIX)-vmlinuz
+	openssl dgst -sha256 <  $(BIN_DIR)/sabai-bundle.tar > $(BIN_DIR)/hash
+	openssl rsautl -sign -inkey $(SABAI_KEYS)/private.pem -keyform PEM -in $(BIN_DIR)/hash  > $(BIN_DIR)/signature
+	tar -C $(BIN_DIR) -cf $(BIN_DIR)/sabai-bundle-secured.tar sabai-bundle.tar signature
+	rm $(BIN_DIR)/hash
+endef
+
+
 define Image/Build
 	$(call Image/Build/$(1))
+	$(call Image/Build/bootscript,$(1))
   ifneq ($(1),iso)
 	$(call Image/Build/grub2,$(1))
 	$(call Image/Build/vdi,$(1))
@@ -224,11 +222,18 @@ define Image/Build
 	$(CP) $(KDIR)/root.iso $(BIN_DIR)/$(IMG_PREFIX).iso
   endif
 	$(CP) $(KDIR)/bzImage $(BIN_DIR)/$(IMG_PREFIX)-vmlinuz
 	$(call Image/Build/gzip/$(1))
 	$(call Image/Build/Profile/$(PROFILE),$(1))
 ifeq ($(CONFIG_TARGET_ROOTFS_INITRAMFS),y)
 	$(call Image/Build/Initramfs)
 endif
+	$(call Image/Build/UpgradeImg)
 endef
 
 $(eval $(call BuildImage))
+
+$(eval $(call RequireCommand,qemu-img, \
+	Please install qemu-img (package qemu-utils in Ubuntu/Debian). \
+))
diff --git a/target/linux/x86/image/gen_image_sabai.sh b/target/linux/x86/image/gen_image_sabai.sh
new file mode 100755
index 0000000..2db5a32
--- /dev/null
+++ b/target/linux/x86/image/gen_image_sabai.sh
@@ -0,0 +1,62 @@
+#!/usr/bin/env bash
+# Copyright (C) 2006-2012 OpenWrt.org
+set -x
+[ $# == 5 -o $# == 6 ] || {
+    echo "SYNTAX: $0 <file> <kernel size> <kernel directory> <rootfs size> <rootfs image> [<align>]"
+    exit 1
+}
+
+#####################
+#1 KERNELS
+#####################
+#2 ROOTFS1
+#####################
+#3 ROOTFS2
+#####################
+#4 Extended
+#####################
+
+
+OUTPUT="$1"
+KERNELSIZE="$2"
+KERNELDIR="$3"
+ROOTFSSIZE1="$4"
+ROOTFSIMAGE="$5"
+ALIGN="$6"
+
+echo "KERNELSIZE=$KERNELSIZE"
+KERNELSIZE="$(( $KERNELSIZE * 4))"
+echo "KERNELSIZE=$KERNELSIZE"
+ROOTFSSIZE2="$ROOTFSSIZE1"
+
+rm -f "$OUTPUT"
+
+head=16
+sect=63
+cyl=$(( ($KERNELSIZE + $ROOTFSSIZE1 + $ROOTFSSIZE2) * 1024 * 1024 / ($head * $sect * 512)))
+
+# create partition table
+set `ptgen -v -o "$OUTPUT" -h $head -s $sect -p ${KERNELSIZE}m -p ${ROOTFSSIZE1}m -p ${ROOTFSSIZE2}m ${ALIGN:+-l $ALIGN}`
+
+KERNELOFFSET="$(($1 / 512))"
+KERNELSIZE="$(($2 / 512))"
+ROOTFSOFFSET1="$(($3 / 512))"
+ROOTFSSIZE1="$(($4 / 512))"
+ROOTFSOFFSET2="$(($5 / 512))"
+ROOTFSSIZE2="$(($6 / 512))"
+
+BLOCKS_KERNEL="$((($KERNELSIZE / 2) - 1))"
+BLOCKS_ROOTFS1="$((($ROOTFSSIZE1 / 2) - 1))"
+BLOCKS_ROOTFS2="$((($ROOTFSSIZE2 / 2) - 1))"
+
+#[ -n "$PADDING" ] && dd if=/dev/zero of="$OUTPUT" bs=512 seek="$ROOTFSOFFSET1" conv=notrunc count="$ROOTFSSIZE1"
+dd if="$ROOTFSIMAGE" of="$OUTPUT" bs=512 seek="$ROOTFSOFFSET1" conv=notrunc
+dd if="$ROOTFSIMAGE" of="$OUTPUT" bs=512 seek="$ROOTFSOFFSET2" conv=notrunc
+
+[ -n "$NOGRUB" ] && exit 0
+
+genext2fs -d "$KERNELDIR" -b "$BLOCKS_KERNEL" "$OUTPUT.kernel"
+dd if="$OUTPUT.kernel" of="$OUTPUT" bs=512 seek="$KERNELOFFSET" conv=notrunc
+rm -f "$OUTPUT.kernel"
+
+
-- 
1.9.1

